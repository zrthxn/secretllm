URL: https://en.wikipedia.org/wiki/C_mathematical_functions
Text: Overview of functions Overview of functions  Floatingpoint environment Complex numbers Typegeneric functions Randomnumber generation Implementations See also References External links C mathematical functions 15 languages Article Talk Read Edit View history Tools Appearance hide Text Small Standard Large Width Standard Wide Color beta Automatic Light Dark From Wikipedia the free encyclopedia C standard library libc General topics Data types Character classification Strings Mathematics File inputoutput Datetime Localization Memory allocation Process control Signals Alternative tokens Miscellaneous headers asserth errnoh setjmph stdargh vte C mathematical operations are a group of functions in the standard library of the C programming language implementing basic mathematical functions12 All functions use floatingpoint numbers in one manner or another Different C standards provide different albeit backwardscompatible sets of functions Most of these functions are also available in the C standard library though in different headers the C headers are included as well but only as a deprecated compatibility feature Overview of functionsedit Most of the mathematical functions are defined in mathh cmath header in C The functions that operate on integers such as abs labs div and ldiv are instead defined in the stdlibh header cstdlib header in C Any functions that operate on angles use radians as the unit of angle1 Not all of these functions are available in the C89 version of the standard For those that are the functions accept only type double for the floatingpoint arguments leading to expensive type conversions in code that otherwise used singleprecision float values In C99 this shortcoming was fixed by introducing new sets of functions that work on float and long double arguments Those functions are identified by f and l suffixes respectively3 Function Description abs labs llabs computes absolute value of an integer value fabs computes absolute value of a floatingpoint value div ldiv lldiv computes the quotient and remainder of integer division fmod remainder of the floatingpoint division operation remainder signed remainder of the division operation remquo signed remainder as well as the three last bits of the division operation fma fused multiplyadd operation fmax larger of two floatingpoint values fmin smaller of two floatingpoint values fdim positive difference of two floatingpoint values nan nanf nanl returns a NaN notanumber Exponential functions exp returns e raised to the given power exp2 returns 2 raised to the given power expm1 returns e raised to the given power minus one log computes natural logarithm to base e log2 computes binary logarithm to base 2 log10 computes common logarithm to base 10 log1p computes natural logarithm to base e of 1 plus the given number ilogb extracts exponent of the number logb extracts exponent of the number Power functions sqrt computes square root cbrt computes cubic root hypot computes square root of the sum of the squares of two given numbers pow raises a number to the given power4 Trigonometric functions sin computes sine cos computes cosine tan computes tangent asin computes arc sine acos computes arc cosine atan computes arc tangent atan2 computes arc tangent using signs to determine quadrants Hyperbolic functions sinh computes hyperbolic sine cosh computes hyperbolic cosine tanh computes hyperbolic tangent asinh computes hyperbolic arc sine acosh computes hyperbolic arc cosine atanh computes hyperbolic arc tangent Error and gamma functions erf computes error function erfc computes complementary error function lgamma computes natural logarithm of the absolute value of the gamma function tgamma computes gamma function Nearest integer floating point operations ceil returns the nearest integer not less than the given value floor returns the nearest integer not greater than the given value trunc returns the nearest integer not greater in magnitude than the given value round lround llround returns the nearest integer rounding away from zero in halfway cases nearbyint returns the nearest integer using current rounding mode rint lrint llrint returns the nearest integer using current rounding mode with exception if the result differs Floating point manipulation functions frexp decomposes a number into significand and a power of 2 ldexp multiplies a number by 2 raised to a power modf decomposes a number into integer and fractional parts scalbn scalbln multiplies a number by FLTRADIX raised to a power nextafter nexttoward returns next representable floatingpoint value towards the given value copysign copies the sign of a floatingpoint value Classification fpclassify categorizes the given floatingpoint value isfinite checks if the argument has finite value isinf checks if the argument is infinite isnan checks if the argument is NaN isnormal checks if the argument is normal signbit checks if the sign of the argument is negative Floatingpoint environmentedit C99 adds several functions and types for finegrained control of floatingpoint environment3 These functions can be used to control a variety of settings that affect floatingpoint computations for example the rounding mode on what conditions exceptions occur when numbers are flushed to zero etc The floatingpoint environment functions and types are defined in fenvh header cfenv in C Function Description feclearexcept clears exceptions C99 fegetenv stores current floatingpoint environment C99 fegetexceptflag stores current status flags C99 fegetround retrieves current rounding direction C99 feholdexcept saves current floatingpoint environment and clears all exceptions C99 feraiseexcept raises a floatingpoint exception C99 fesetenv sets current floatingpoint environment C99 fesetexceptflag sets current status flags C99 fesetround sets current rounding direction C99 fetestexcept tests whether certain exceptions have been raised C99 feupdateenv restores floatingpoint environment but keeps current exceptions C99 Complex numbersedit C99 adds a new Complex keyword and complex convenience macro only available if the complexh header is included that provides support for complex numbers Any floatingpoint type can be modified with complex and is then defined as a pair of floatingpoint numbers Note that C99 and C do not implement complex numbers in a codecompatible way the latter instead provides the class stdcomplex All operations on complex numbers are defined in the complexh header As with the realvalued functions an f or l suffix denotes the float complex or long double complex variant of the function Function Description Basic operations cabs computes absolute value C99 carg computes argument of a complex number C99 cimag computes imaginary part of a complex number C99 creal computes real part of a complex number C99 conj computes complex conjugate C99 cproj computes complex projection into the Riemann sphere C99 Exponentiation operations cexp computes complex exponential C99 clog computes complex logarithm C99 csqrt computes complex square root C99 cpow computes complex power C99 Trigonometric operations csin computes complex sine C99 ccos computes complex cosine C99 ctan computes complex tangent C99 casin computes complex arc sine C99 cacos computes complex arc cosine C99 catan computes complex arc tangent C99 Hyperbolic operations csinh computes complex hyperbolic sine C99 ccosh computes complex hyperbolic cosine C99 ctanh computes complex hyperbolic tangent C99 casinh computes complex hyperbolic arc sine C99 cacosh computes complex hyperbolic arc cosine C99 catanh computes complex hyperbolic arc tangent C99 A few more complex functions are reserved for future use in C995 Implementations are provided by opensource projects that are not part of the standard library Function Description Error functions cerf computes the complex error function C99 cerfc computes the complex complementary error function C99 Typegeneric functionsedit The header tgmathh defines a typegeneric macro for each mathematical function defined in mathh and complexh This adds a limited support for function overloading of the mathematical functions the same function name can be used with different types of parameters the actual function will be selected at compile time according to the types of the parameters Each typegeneric macro that corresponds to a function that is defined for both real and complex numbers encapsulates a total of 6 different functions float double and long double and their complex variants The typegeneric macros that correspond to a function that is defined for only real numbers encapsulates a total of 3 different functions float double and long double variants of the function The C language includes native support for function overloading and thus does not provide the tgmathh header even as a compatibility feature Randomnumber generationedit The header stdlibh cstdlib in C defines several functions that can be used for statistically random number generation6 Function Description rand generates a pseudorandom number between 0 and RANDMAX inclusive srand initializes a pseudorandom number generator arc4random generates a pseudorandom number between 0 and UINT32MAX usually using a better algorithm than rand arc4randomuniform generates a pseudorandom number between 0 and a maximum value arc4randombuf fill a buffer with a pseudorandom bitstream arc4randomstir initializes a pseudorandom number generator The arc4random family of random number functions are not defined in POSIX standard but is found in some common libc implementations It used to refer to the keystream generator of a leaked version of RC4 cipher hence alleged RC4 but different algorithms usually from other ciphers like ChaCha20 have been implemented since using the same name The quality of randomness from rand are usually too weak to be even considered statistically random and it requires explicit seeding It is usually advised to use arc4random instead of rand when possible Some C libraries implement rand using arc4randomuniform internally Implementationsedit Under POSIX systems like Linux and BSD the mathematical functions as declared in mathh are bundled separately in the mathematical library libm Therefore if any of those functions are used the linker must be given the directive lm There are various libm implementations including GNU libcs libm AMDs libm github used almost as is by Windows Intel C Compiler libm Red Hats libm Newlib Suns FDLIBM which was used as the basis for FreeBSDs msun and OpenBSDs libm both of which in turn were the basis of Julias OpenLibm musls libm based on the BSD libms and other projects like Arm LLVMs libm which is correctly rounded ie errors from the mathematically correct result are lower than 05 unit in the last place7 Arénaire projects CRlibm correctly rounded libm and its successor MetaLibm which uses Remez algorithm to automatically generate approximations that are formally proven Rutgers RLIBM which provides correctly rounded functions in single precision8 See also Rounding Tablemakers dilemma Implementations not necessarily under a name of libm include Arms optimized math routines GCEMath is a version of CC math functions written for C constexpr compiletime calculation COREMATH correctly rounded for single and double precision SIMD vectorized math libraries include SLEEF Yeppp and Agner Fogs VCL plus a few closedsource ones like SVML and DirectXMath9 See alsoedit C99 floatingpoint support Referencesedit a b ISOIEC 98991999 specification PDF p 212 712 Prata Stephen 2004 C primer plus Sams Publishing Appendix B Section V The Standard ANSI C Library with C99 Additions ISBN 0672326965 a b Prata Stephen 2004 C primer plus Sams Publishing Appendix B Section VIII C99 Numeric Computational Enhancements ISBN 0672326965 Notationally it may seem convenient to use powx2 or powx3 to compute squares or cubes However this is not advisable in timecritical code Unless an implementation takes special care of these cases at compile time xx or xxx will execute much faster Also sqrtx and cbrtx should be preferred over powx5 or powx13 man cerf3 man cerfc3 see eg httpslinuxdienetman3cerf The GNU C Library ISO Random Retrieved 18 July 2018 Math Functions The LLVM C Library libcllvmorg RLibm Rutgers Architecture and Programming Languages Labs Correctly Rounded Libm peoplecsrutgersedu Cordes Peter intel Where is Clangs mm256powps intrinsic Stack Overflow External linksedit The Wikibook C Programming has a page on the topic of C ProgrammingC Reference mathh mathematical declarations Base Definitions Reference The Single UNIX Specification Version 4 from The Open Group C reference for math functions hide vte C programming language ANSI C C99 C11 C17 C23 Embedded C MISRA C Features Functions Header files Operators String Syntax Preprocessor Data types Standard library Char File IO Math Dynamic memory String Time Variadic POSIX Implementations Bionic libhybris dietlibc glibc EGLIBC klibc Windows CRT musl Newlib uClibc Compilers ACK Borland Turbo C Clang GCC ICC LCC Norcroft C PCC SDCC TCC Visual Studio Express C Watcom CC IDEs Anjuta CLion CodeBlocks CodeLite Eclipse Geany GNOME Builder KDevelop Visual Studio NetBeans Comparison with other languages Compatibility of C and C Comparison with Pascal Descendant languages C C D ObjectiveC Alef Limbo Go Vala Designer Dennis Ritchie Category Category C standard library This page was last edited on 28 June 2024 at 2013 UTC Text is available under the Creative Commons AttributionShareAlike 40 License additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a nonprofit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view

URL: https://en.wikipedia.org/wiki/Switching_circuit_theory
Text: See also References Further reading Switching circuit theory Add languages Article Talk Read Edit View history Tools Appearance hide From Wikipedia the free encyclopedia This article includes a list of general references but it lacks sufficient corresponding inline citations Please help to improve this article by introducing more precise citations November 2014 Learn how and when to remove this message Switching circuit theory is the mathematical study of the properties of networks of idealized switches Such networks may be strictly combinational logic in which their output state is only a function of the present state of their inputs or may also contain sequential elements where the present state depends on the present state and past states in that sense sequential circuits are said to include memory of past states An important class of sequential circuits are state machines Switching circuit theory is applicable to the design of telephone systems computers and similar systems Switching circuit theory provided the mathematical foundations and tools for digital system design in almost all areas of modern technology1 In an 1886 letter Charles Sanders Peirce described how logical operations could be carried out by electrical switching circuits2 During 18801881 he showed that NOR gates alone or alternatively NAND gates alone can be used to reproduce the functions of all the other logic gates but this work remained unpublished until 19333 The first published proof was by Henry M Sheffer in 1913 so the NAND logical operation is sometimes called Sheffer stroke the logical NOR is sometimes called Peirces arrow4 Consequently these gates are sometimes called universal logic gates5 In 1898 Martin Boda described a switching theory for signalling block systems67 Eventually vacuum tubes replaced relays for logic operations Lee De Forests modification in 1907 of the Fleming valve can be used as a logic gate Ludwig Wittgenstein introduced a version of the 16row truth table as proposition 5101 of Tractatus LogicoPhilosophicus 1921 Walther Bothe inventor of the coincidence circuit got part of the 1954 Nobel Prize in physics for the first modern electronic AND gate in 1924 Konrad Zuse designed and built electromechanical logic gates for his computer Z1 from 1935 to 1938 The theory was independently established through the works of NEC engineer Akira Nakashima in Japan8 Claude Shannon in the United States9 and Victor Shestakov in the Soviet Union10 The three published a series of papers showing that the twovalued Boolean algebra can describe the operation of switching circuits71112131 However Shannons work has largely overshadowed the other two and despite some scholars arguing the similarities of Nakashimas work to Shannons their approaches and theoretical frameworks were markedly different14 Also implausible is that Shestakovs influenced the other two due to the language barriers and the relative obscurity of his work abroad14 Furthermore Shannon and Shestakov defended their theses the same year in 193815 and Shestakov did not publish until 194115 Ideal switches are considered as having only two exclusive states for example open or closed In some analysis the state of a switch can be considered to have no influence on the output of the system and is designated as a dont care state In complex networks it is necessary to also account for the finite switching time of physical switches where two or more different paths in a network may affect the output these delays may result in a logic hazard or race condition where the output state changes due to the different propagation times through the network See alsoedit Circuit switching Message switching Packet switching Fast packet switching Network switching subsystem 5ESS Switching System Number One Electronic Switching System Boolean circuit Celement Circuit complexity Circuit minimization Karnaugh map Logic design Logic gate Logic in computer science Nonblocking minimal spanning switch Programmable logic controller computer software mimics relay circuits for industrial applications QuineMcCluskey algorithm Relay an early kind of logic device Switching lemma Unate function Referencesedit a b Stanković Radomir S in German Astola Jaakko Tapio in Finnish eds 2008 Reprints from the Early Days of Information Sciences TICSP Series on the Contributions of Akira Nakashima to Switching Theory PDF Tampere International Center for Signal Processing TICSP Series Vol 40 Tampere University of Technology Tampere Finland ISBN 9789521519802 ISSN 14562774 Archived from the original PDF on 20210308 32071 pages 1000 min Peirce Charles Sanders 1993 1886 Letter Peirce to A Marquand Writings of Charles S Peirce Vol 5 pp 421423 See also Burks Arthur Walter 1978 Review Charles S Peirce The new elements of mathematics Bulletin of the American Mathematical Society review 84 5 913918 917 doi101090S000299041978145339 Peirce Charles Sanders 1933 Winter of 18801881 A Boolian Algebra with One Constant Collected Papers manuscript Vol 4 paragraphs 1220 Reprinted in Writings of Charles S Peirce Vol 4 reprint ed 1989 pp 218221 ISBN 9780253372017 ark13960t11p5r61f See also Roberts Don D 2009 The Existential Graphs of Charles S Peirce p 131 Kleine Büning Hans Lettmann Theodor 1999 Propositional logic deduction and algorithms Cambridge University Press p 2 ISBN 9780521630177 Bird John 2007 Engineering mathematics Newnes p 532 ISBN 9780750685559 Boda Martin 1898 Die Schaltungstheorie der Blockwerke The switching theory of block systems Organ für die Fortschritte des Eisenbahnwesens in technischer Beziehung Fachblatt des Vereins deutscher EisenbahnVerwaltungen in German Neue Folge XXXV 17 Wiesbaden Germany C W Kreidels Verlag 17 2934 4953 7175 9195 111115 133138 1234567 NB This series of seven articles was republished in a 91pages book in 1899 with a foreword by Georg Barkhausen de a b Klir George Jiří May 1972 Reference Notations to Chapter 1 Introduction to the Methodology of Switching Circuits 1 ed Binghamton New York USA Litton Educational Publishing Inc D van Nostrand Company p 19 ISBN 0442244630 LCCN 72181095 C44630003 p 19 Although the possibility of establishing a switching theory was recognized by M BodaA as early as in the 19th century the first important works on this subject were published by A NakashimaB and C E ShannonC shortly before World War II xvi5731 pages Nakashima Akira May 1936 Theory of Relay Circuit Composition Nippon Electrical Communication Engineering 3 197226 NB Translation of an article which originally appeared in Japanese in the Journal of the Institute of Telegraph and Telephone Engineers of Japan JITTEJ September 1935 150 731752 Shannon Claude Elwood 1938 A Symbolic Analysis of Relay and Switching Circuits Transactions of the American Institute of Electrical Engineers 57 12 American Institute of Electrical Engineers AIEE 713723 doi101109TAIEE19385057767 hdl1721111173 S2CID 51638483 NB Based on Shannons master thesis of the same title at Massachusetts Institute of Technology in 1937 Shestakov Шестаков Victor Ivanovich Виктор Иванович 1938 Некоторые математические методы конструирования и упрощения двухполюсных электрических схем класса А Some mathematical methods for the construction and simplification of twoterminal electrical networks of class A PhD thesis in Russian Lomonosov State University Yamada 山田 Akihiko 彰彦 2004 of Research on Switching Theory in Japan IEEJ Transactions on Fundamentals and Materials 124 8 Institute of Electrical Engineers of Japan 720726 Bibcode2004IJTFM124720Y doi101541ieejfms124720 Archived from the original on 20220710 Retrieved 20221026 Switching TheoryRelay Circuit Network TheoryTheory of Logical Mathematics IPSJ Computer Museum Information Processing Society of Japan 2012 Archived from the original on 20210322 Retrieved 20210328 Stanković Radomir S in German Astola Jaakko Tapio in Finnish Karpovsky Mark G 2007 Some Historical Remarks on Switching Theory PDF Niš Serbia Tampere Finland Boston Massachusetts USA CiteSeerX 1011661248 S2CID 10029339 Archived PDF from the original on 20221025 Retrieved 20221025 8 pages a b Kawanishi Toma 2019 Prehistory of Switching Theory in Japan Akira Nakashima and His Relaycircuit Theory Historia Scientiarum Second Series 29 1 136162 doi1034336historiascientiarum291136 a b Moisil GR C 1969 The Algebraic Theory of Switching Circuits Pergamon Press pp 12 17 ISBN 9781483160764 Further readingedit Keister William Ritchie Alistair E Washburn Seth H 1951 The Design of Switching Circuits The Bell Telephone Laboratories Series 1 ed D Van Nostrand Company Inc p 147 Archived from the original on 20200509 Retrieved 20200509 8 2xx5562 pages Caldwell Samuel Hawks 19581201 February 1958 Written at Watertown Massachusetts USA Switching Circuits and Logical Design 5th printing September 1963 1st ed New York USA John Wiley Sons Inc ISBN 0471129690 LCCN 587896 xviii686 pages Perkowski Marek A Grygiel Stanislaw 19951120 6 Historical Overview of the Research on Decomposition A Survey of Literature on Function Decomposition PDF Version IV Functional Decomposition Group Department of Electrical Engineering Portland University Portland Oregon USA CiteSeerX 1011641129 Archived PDF from the original on 20210328 Retrieved 20210328 188 pages Stanković Radomir S in German Sasao Tsutomu Astola Jaakko Tapio in Finnish August 2001 Publications in the First Twenty Years of Switching Theory and Logic Design PDF Tampere International Center for Signal Processing TICSP Series Tampere University of Technology TTKK Monistamo Finland ISSN 14562774 S2CID 62319288 14 Archived from the original PDF on 20170809 Retrieved 20210328 460 pages Stanković Radomir S in German Astola Jaakko Tapio in Finnish 2011 Written at Niš Serbia Tampere Finland From Boolean Logic to Switching Circuits and Automata Towards Modern Information Technology Studies in Computational Intelligence Vol 335 1 ed Berlin Heidelberg Germany SpringerVerlag doi1010079783642116827 ISBN 9783642116810 ISSN 1860949X LCCN 2011921126 Retrieved 20221025 xviii212 pages hide vte Digital electronics Components Transistor Resistor Inductor Capacitor Printed electronics Printed circuit board Electronic circuit Flipflop Memory cell Combinational logic Sequential logic Logic gate Boolean circuit Integrated circuit IC Hybrid integrated circuit HIC Mixedsignal integrated circuit Threedimensional integrated circuit 3D IC Emittercoupled logic ECL Erasable programmable logic device EPLD Macrocell array Programmable logic array PLA Programmable logic device PLD Programmable Array Logic PAL Generic Array Logic GAL Complex programmable logic device CPLD Fieldprogrammable gate array FPGA Fieldprogrammable object array FPOA Applicationspecific integrated circuit ASIC Tensor Processing Unit TPU Theory Digital signal Boolean algebra Logic synthesis Logic in computer science Computer architecture Digital signal Digital signal processing Circuit minimization Switching circuit theory Gate equivalent Design Logic synthesis Place and route Placement Routing Transactionlevel modeling Registertransfer level Hardware description language Highlevel synthesis Formal equivalence checking Synchronous logic Asynchronous logic Finitestate machine Hierarchical state machine Applications Computer hardware Hardware acceleration Digital audio radio Digital photography Digital telephone Digital video cinematography television Electronic literature Design issues Metastability Runt pulse Categories Circuit complexityDigital circuitsDigital electronics This page was last edited on 8 August 2024 at 1702 UTC Text is available under the Creative Commons AttributionShareAlike 40 License additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a nonprofit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view

URL: https://developer.wikimedia.org/
Text: Wikimedia Developer Portal Wikimedia Developer Portal Discover and build Wikimedia technology Find technical documentation and connect with the developer community behind Wikipedia and other Wikimedia projects Get started Use Wikimedia content and data Access articles from Wikipedia media files structured data and more with public APIs and downloads Build tools and bots Tools and bots make it easier to edit and maintain Wikimedia projects Contribute to Wikimedia open source Help build the Wikimedia ecosystem with open source software Connect with the community Get involved with the Wikimedia technical community and find opportunities for support and learning Get help Find resources to help with questions and troubleshooting Copyright Wikimedia Foundation and contributors Privacy policy Terms of Use Code GPL30orlater Content CCBYSA40 About Contribute

URL: https://en.wikipedia.org/wiki/Workstation
Text:  Origins and development 1980s rise in popularity Thin clients 3M computer Decline Market position Modern market Modern market  GPU workstations Decline of RISC workstations x8664 Definition See also References External links Workstation 46 languages Article Talk Read Edit View history Tools Appearance hide From Wikipedia the free encyclopedia This article is about the type of computer For other uses see Work station This article needs additional citations for verification Please help improve this article by adding citations to reliable sources Unsourced material may be challenged and removed Find sources Workstation news newspapers books scholar JSTOR October 2024 Learn how and when to remove this message A NeXTcube workstation the same type on which the World Wide Web was created by Tim BernersLee at CERN in Switzerland1 A workstation is a special computer designed for technical or scientific applications2 Intended primarily to be used by a single user2 they are commonly connected to a local area network and run multiuser operating systems The term workstation has been used loosely to refer to everything from a mainframe computer terminal to a PC connected to a network but the most common form refers to the class of hardware offered by several current and defunct companies such as Sun Microsystems3 Silicon Graphics Apollo Computer4 DEC HP NeXT and IBM which powered the 3D computer graphics revolution of the late 1990s5 Workstations formerly offered higher performance than mainstream personal computers especially in CPU graphics memory and multitasking Workstations are optimized for the visualization and manipulation of different types of complex data such as 3D mechanical design engineering simulations like computational fluid dynamics animation video editing image editing medical imaging image rendering computational science generating mathematical plots and software development Typically the form factor is that of a desktop computer which consists of a highresolution display a keyboard and a mouse at a minimum but also offers multiple displays graphics tablets and 3D mice for manipulating objects and navigating scenes Workstations were the first segment of the computer market6 to present advanced accessories and collaboration tools like videoconferencing5 The increasing capabilities of mainstream PCs since the late 1990s have reduced distinction between the PCs and workstations7 Typical 1980s workstations have expensive proprietary hardware and operating systems to categorically distinguish from standardized PCs From the 1990s and 2000s IBMs RS6000 and IntelliStation have RISCbased POWER CPUs running AIX and its IBM PC Series and Aptiva corporate and consumer PCs have Intel x86 CPUs However by the early 2000s this difference largely disappeared since workstations use highly commoditized hardware dominated by large PC vendors such as Dell HewlettPackard and Fujitsu selling x8664 systems running Windows or Linux edit Early Xerox workstation HP 9000 model 425 workstation running HPUX 9 and Visual User Environment VUE HP 9000 model 735 running HPUX and the Common Desktop Environment CDE Origins and developmentedit Workstations are older than the first personal computer PC8 The first computer that might qualify as a workstation is the IBM 1620 a small scientific computer designed to be used interactively by a single person sitting at the console9 It was introduced in 195910 One peculiar feature of the machine is that it lacks any arithmetic circuitry11 To perform addition it requires a memoryresident table of decimal addition rules12 This reduced the cost of logic circuitry enabling IBM to make it inexpensive The machine is codenamed CADET and was initially rented for 1000 per month In 1965 the IBM 1130 scientific computer became the successor to 1620 Both of these systems run Fortran and other languages13 They are built into roughly desksized cabinets with console typewriters They have optional addon disk drives printers and both papertape and punchedcard IO Early workstations were generally dedicated minicomputers a multiuser system reserved for one user8 For example the PDP8 from Digital Equipment Corporation is regarded as the first commercial minicomputer14 Workstations have historically been more advanced than contemporary PCs with more powerful CPU architectures earlier networking more advanced graphics more memory and multitasking with sophisticated operating systems like Unix Because of their minicomputer heritage from the start workstations have run professional and expensive software such as CAD and graphics design as opposed to PCs games and text editors8 The Lisp machines developed at MIT in the early 1970s pioneered some workstation principles as highperformance networked singleuser systems intended for heavily interactive use Lisp Machines were commercialized beginning 1980 by companies like Symbolics Lisp Machines Texas Instruments the TI Explorer and Xerox the InterlispD workstations The first computer designed for a single user with highresolution graphics and so a workstation in the modern sense is the Alto developed at Xerox PARC in 197315 Other early workstations include the Terak 8510a 197716 Three Rivers PERQ 1979 and the later Xerox Star 1981 1980s rise in popularityedit See also Silicon Graphics Inc NeXT Apollo Computer Digital Equipment Corporation and IBM RT PC In the early 1980s with the advent of 32bit microprocessors such as the Motorola 68000 several new competitors appeared including Apollo Computer and Sun Microsystems17 with workstations based on 68000 and Unix1819 Meanwhile DARPAs VLSI Project created several spinoff graphics products such as the Silicon Graphics 3130 Target markets were differentiated with Sun and Apollo considered to be network workstations and SGI as graphics workstations RISC CPUs increased in the mid1980s typical of workstation vendors20 Competition between RISC vendors lowered CPU prices to as little as 10 per MIPS much less expensive than the Intel 8038621 after large price cuts in 1987 and 1988 a personal workstation suitable for 2D CAD costing 5000 equivalent to 12000 in 2023 to 25000 equivalent to 61000 in 2023 was available from multiple vendors Midrange models capable of 3D graphics cost from 35000 equivalent to 86000 in 2023 to 60000 equivalent to 147000 in 2023 while highend models overlapping with minicomputers cost from 80000 equivalent to 197000 in 2023 to 100000 equivalent to 246000 in 2023 or more22 By then a 12000 equivalent to 29000 in 2023 personal workstation might be a highend PC like Macintosh II or IBM PS2 Model 80 lowend workstation or a hybrid device like the NeXT Computer all with similar overlapping specifications8 One differentiator between PC and workstation was that the latter was much more likely to have a graphics accelerator with support for a graphics standard like PHIGS or X Window while the former usually depended on software rendering or proprietary accelerators The computer animation industrys needs typically caused improvements in graphical technology with CAD using the same improvements later22 BYTE predicted in 1989 Soon the only way well be able to tell the difference between traditional workstations and PCs will be by the operating system they run with the former running Unix and the latter running OS2 classic Mac OS andor Unix Many workstations by then had some method to run increasingly popular and powerful PC software such as Lotus 123 or Microsoft Word8 The magazine demonstrated that year that an individual could build a workstation with commodity components with specifications comparable to commercially available lowend workstations23 Workstations often featured SCSI or Fibre Channel disk storage systems highend 3D accelerators single or multiple 64bit processors24 large amounts of RAM and welldesigned cooling Additionally the companies that make the products tend to have comprehensive repairreplacement plans As the distinction between workstation and PC fades however workstation manufacturers have increasingly employed offtheshelf PC components and graphics solutions rather than proprietary hardware or software Some lowcost workstations are still expensive by PC standards but offer binary compatibility with higherend workstations and servers made by the same vendor This allows software development to take place on lowcost relative to the server desktop machines Thin clientsedit Workstations diversified to the lowest possible price point as opposed to performance called the thin client or network computer Dependent upon a network and server this reduces the machine to having no hard drive and only the CPU keyboard mouse and screen Some diskless nodes still run a traditional operating system and perform computations locally with storage on a remote server25 These are intended to reduce the initial system purchase cost and the total cost of ownership by reducing the amount of administration required per user26 This approach was first attempted as a replacement for PCs in office productivity applications with the 3Station by 3Com In the 1990s X terminals filled a similar role for technical computing Suns thin clients include the Sun Ray product line27 However traditional workstations and PCs continued to drop in price and complexity as remote management tools for IT staff became available undercutting this market 3M computeredit Main article 3M computer A NeXTstation graphics workstation from 1990 Sony NEWS workstation 2 68030 at 25 MHz 12801024 pixel and 256color display SGI Indy graphics workstation SGI O2 graphics workstation HP C8000 workstation running HPUX 11i with CDE Six workstations four HP Z620 one HP Z820 one HP Z420 A highend workstation of the early 1980s with the three Ms or a 3M computer coined by Raj Reddy and his colleagues at CMU has one megabyte of RAM a megapixel display roughly 10001000 pixels and one MegaFLOPS compute performance at least one million floatingpoint operations per second28 RFC 782 defines the workstation environment more generally as hardware and software dedicated to serve a single user and that it provisions additional shared resources This is at least one order of magnitude beyond the capacity of the personal computer of the time The original 1981 IBM Personal Computer has 16 KB memory a textonly display and floatingpoint performance around 1 kFLOPS 30 kFLOPS with the optional 8087 math coprocessor Other features beyond the typical personal computer include networking graphics acceleration and highspeed internal and peripheral data buses Another goal was to bring the price below one megapenny that is less than 10000 equivalent to 28000 in 2023 which was achieved in the late 1980s Throughout the early to mid1990s many workstations cost from 15000 to 100000 equivalent to 200000 in 2023 or more Declineedit The more widespread adoption of these technologies into mainstream PCs was a direct factor in the decline of the workstation as a separate market segment29 Reliable components Highperformance 3D graphics hardware for computeraided design CAD and computergenerated imagery CGI animation is increasingly popular in the PC market around the midtolate 1990s mostly driven by computer gaming yielding the first official GPU in Nvidias NV10 and the breakthrough GeForce 256 Highperformance CPUs the first RISC of the early 1980s offer roughly one order of magnitude in performance improvement over CISC processors of comparable cost Intels x86 CISC family always had the edge in market share and the economies of scale that this implied By the mid1990s some CISC processors like the Motorola 68040 and Intels 80486 and Pentium have performance parity with RISC in some areas such as integer performance at the cost of greater chip complexity and hardware floatingpoint calculations relegating RISC to even more highend markets30 Hardware support for floatingpoint operations optional on the original IBM PC remained on a separate chip for Intel systems until the 80486DX processor Even then x86 floatingpoint performance lags other processors due to limitations in its architecture Today even lowprice PCs now have performance in the gigaFLOPS range Highperformancehighcapacity data storage early workstations tend to use proprietary disk interfaces until the SCSI standard of the mid1980s Although SCSI interfaces soon became available for IBM PCs they were comparatively expensive and tend to be limited by the speed of the PCs ISA peripheral bus SCSI is an advanced controller interface good for multitasking and daisy chaining This makes it suited for use in servers and its benefits to desktop PCs which mostly run singleuser operating systems are less clear but it is standard on the 1980s1990s Macintosh Serial ATA is more modern with throughput comparable to SCSI but at a lower cost Highspeed networking 10 Mbits or better 10 Mbits network interfaces were commonly available for PCs by the early 1990s although by that time workstations were pursuing even higher networking speeds moving to 100 Mbits 1 Gbits and 10 Gbits However economies of scale and the demand for highspeed networking in even nontechnical areas have dramatically decreased the time it takes for newer networking technologies to reach commodity price points Large displays 17 to 21inch with high resolutions and high refresh rates for graphics and CAD work which were rare among PCs in the late 1980s and early 1990s but became common among PCs by the late 1990s Large memory configurations PCs such as IBM clones are originally limited to 640 KB of RAM until the 1982 introduction of the 80286 processor early workstations have megabytes of memory IBM clones require special programming techniques to address more than 640 KB until the 80386 as opposed to other 32bit processors such as SPARC which provide straightforward access to nearly their entire 4 GB memory address range 64bit workstations and servers supporting an address range far beyond 4 GB have been available since the early 1990s a technology just beginning to appear in the PC desktop and server market in the mid2000s Operating system early workstations ran the Unix operating system OS a Unixlike variant or an unrelated equivalent OS such as VMS The PC CPUs of the time have limitations in memory capacity and memory access protection making them unsuitable to run OSes of this sophistication but this too began to change in the late 1980s as PCs with the 32bit 80386 with integrated paged MMUs became widely affordable and enabling OS2 Windows NT 31 and Unixlike systems based on BSD and Linux on commodity PC hardware Tight integration between the OS and the hardware Workstation vendors both design the hardware and maintain the Unix operating system variant that runs on it This allows for much more rigorous testing than is possible with an operating system such as Windows Windows requires that thirdparty hardware vendors write compliant hardware drivers that are stable and reliable Also minor variations in hardware quality such as timing or build quality can affect the reliability of the overall machine Workstation vendors are able to ensure both the quality of the hardware and the stability of the operating system drivers by validating these things inhouse and this leads to a generally much more reliable and stable machine Market positionedit Sun Ultra 20 with AMD Opteron processor and Solaris 10 Since the late 1990s the workstation and consumer markets have further merged Many lowend workstation components are now the same as the consumer market and the price differential narrowed For example most Macintosh Quadra computers were originally intended for scientific or design work all with the Motorola 68040 CPU backward compatible with 68000 Macintoshes The consumer Macintosh IIcx and Macintosh IIci models can be upgraded to the Quadra 700 In an era when many professionals preferred Silicon Graphics workstations the Quadra 700 was an intriguing option at a fraction of the cost as resourceintensive software such as InfiniD brought studioquality 3D rendering and animations to the home desktop The Quadra 700 can run AUX 30 making it a Unix workstation31 Another example is the Nvidia GeForce 256 consumer graphics card which spawned the Quadro workstation card which has the same GPU but different driver support and certifications for CAD applications and a much higher price Workstations have typically driven advancements in CPU technology All computers benefit from multiprocessor and multicore designs essentially multiple processors on a die The multicore design was pioneered by IBMs POWER4 it and Intel Xeon have multiple CPUs more ondie cache and ECC memory Some workstations are designed or certified for use with only one specific application such as AutoCAD Avid Xpress Studio HD or 3D Studio Max The certification process increases workstation prices Modern marketedit This HewlettPackard Z6 an x8664based workstation has two RTX 5000 GPUs GPU workstationsedit Modern workstations are typically desktop computers with AMD or NVIDIA GPUs to do highperformance computing on software programs such as video editing 3D modeling computeraided design and rendering32 Decline of RISC workstationsedit By January 2009 all RISCbased workstation product lines had been discontinued HewlettPackard withdrew its last HP 9000 PARISCbased desktop products from the market in January 200833 IBM retired the IntelliStation POWER on January 2 200934 SGI ended general availability of its MIPSbased SGI Fuel and SGI Tezro workstations in December 200635 Sun Microsystems announced endoflife for its last Sun Ultra SPARC workstations in October 200836 In early 2018 RISC workstations were reintroduced in a series of IBM POWER9based systems by Raptor Computing Systems3738 In October of 2024 System 76 introduces The Thelio Astra an Arm workstation aim for autonomous car industry39 x8664edit Most of the current workstation market uses x8664 microprocessors Operating systems include Windows FreeBSD Linux distributions macOS and Solaris40 Some vendors also market commodity monosocket systems as workstations These are three types of workstations Workstation blade systems IBM HC10 or HewlettPackard xw460c Sun Visualization System is akin to these solutions41 Ultra highend workstation SGI Virtu VS3xx Deskside systems containing serverclass CPUs and chipsets on large serverclass motherboards with highend RAM HP Zseries workstations and Fujitsu CELSIUS workstations Definitionedit A highend desktop market segment includes workstations with PC operating systems and components Component product lines may be segmented with premium components that are functionally similar to the consumer models but with higher robustness or performance42 A workstationclass PC may have some of the following features Larger number of memory sockets which use DIMM slots or registered buffered modules43 Multiple displays43 Reliable highperformance graphics card43 Multiple processor sockets powerful CPUs43 Run reliable operating system with advanced features43 Support for ECC memory43 M244 or PCIE NVMe45 SSD See alsoedit Mobile workstation Gaming computer List of computer system manufacturers Music workstation Personal supercomputer Remote Graphics Software Referencesedit Original NeXT computer used by Sir Tim BernersLee to design the World Wide Web NeXT Google Arts Culture a b workstation Definition Facts Britannica retrieved 20211205 Bechtolsheim Andreas Baskett Forest 1980 Highperformance raster graphics for microcomputer systems Proceedings of the 7th annual conference on Computer graphics and interactive techniques SIGGRAPH 80 New York New York USA ACM Press pp 4347 doi101145800250807466 ISBN 0897910214 S2CID 12045240 US and India sign neutrino pact Physics World 31 5 13 May 2018 doi1010882058705831523 ISSN 09538585 a b Johnson Karen Fairless Tami Giangrande Scott 20200801 KaBand ARM Zenith Radar Corrections KAZRCOR KAZRCFRCOR ValueAdded Products Report doi1021721647336 OSTI 1647336 S2CID 242933956 Global Personal Computers Market Report 2021 to 2030 COVID19 Impact and Recovery ResearchAndMarketscom Business Wire 20210623 Retrieved 20220907 Workstation Computer OIDair WEB Archived from the original on 20211205 Retrieved 20211205 a b c d e Baran Nick February 1989 Two Worlds Converge BYTE pp 229233 Retrieved 20241008 IBM workstations PDF IBM IBM Archives 1620 Data Processing System wwwibmcom 20030123 Retrieved 20220306 Sweeney D W 1965 An analysis of floatingpoint addition IBM Systems Journal 4 1 3142 doi101147sj410031 ISSN 00188670 IBM 1620 20171222 Archived from the original on 20171222 Retrieved 20220308 IBM 1130 Press Release 20190705 Archived from the original on 20190705 Retrieved 20220306 Hey Anthony J G 2015 The computing universe a journey through a revolution Gyuri Pápay Cambridge University Press ISBN 9781316129760 OCLC 899007268 Newquist HP 1994 The Brain Makers Internet Archive Indianapolis Ind Sams Pub ISBN 9780672304125 Pascal and the PMachine The Digital Antiquarian Retrieved 20220308 The Death Of The Workstation INFOtainment News 20130211 Retrieved 20220319 The SUN workstation architecture PDF Stanford University Retrieved 15 March 2022 Apollo Domain DN100 workstation CHM Revolution wwwcomputer historyorg Retrieved 20220310 Funding a revolution government support for computing research Washington DC National Academy Press 1999 ISBN 0585142734 OCLC 44965252 Marshall Trevor Tazelaar Jane Morrill February 1989 Worth the RISC BYTE pp 245249 Retrieved 20241008 a b Robinson Phillip February 1989 Art 2 Years Science BYTE pp 255264 Retrieved 20241008 Nicholls Bill February 1989 The Current Crop BYTE pp 235244 Retrieved 20241008 New Straits Times New Straits Times Conrad Eric Misenar Seth Feldman Joshua 2012 CISSP Study Guide Elsevier pp 63141 doi101016b9781597499613000030 ISBN 9781597499613 Retrieved 20220318 Diskless Nodes HOWTO document for Linux What is this all about wwwosshcom Retrieved 20220318 CNN Here comes the Sun Ray November 2 1999 wwwCNNcom Retrieved 20220318 Andries van Dam David H Laidlaw Rosemary Michelle Simpson 20020804 Experiments in Immersive Virtual Reality for Scientific Visualization Computers Graphics 26 4 535555 CiteSeerX 101149249 doi101016S0097849302001139 The Daily Gazette The Daily Gazette Webster Bruce December 1991 Macintosh Quadras Power But No Pizzazz MacWorld Vol 8 no 12 pp 140147 Wilkinson Chris 11 December 2020 Working from home at 25MHz You could do worse than a Quadra 700 even in 2020 Ars Technica Unsworth Andrew February 9 2023 Best workstation GPUs in 2024 The top picks PC Guide Discontinuance Notice c8000 Workstation HP July 2007permanent dead link Hardware Withdrawal Announcement IntelliStation POWER 185 and 285 PDF IBM End of General Availability for MIPS IRIX Products Silicon Graphics December 2006 A remarketed EOL Sun Ultra 45 workstation Solar systems Archived from the original on 20120102 Retrieved 20120411 Raptor Launching Talos II Lite POWER9 Computer System At A Lower Cost Phoronix Raptor Announces Blackbird MicroATX LowCost POWER9 Motherboard Phoronix Davenport Corbin 20241022 System76 Thelio Astra Combines Linux With a 128Core ARM CPU HowTo Geek Retrieved 20241022 edengelkingiia 20000915 Which workstation OS would you like to support TechRepublic Retrieved 20220403 Kovar Joseph F 20070501 IBM Using Blades To Attack Desktop PC Market CRN Retrieved 20220408 Peddie Jon June 13 2013 The of Visual Magic in Computers How Beautiful Images are Made in CAD 3D VR and AR Springer London ISBN 9781447149323 Retrieved April 28 2024 a b c d e f Bushong Stewart C Clarke Geoffrey 20130807 Magnetic Resonance Imaging Physical and Biological Principles Elsevier Health Sciences ISBN 9780323277655 The Best M2 SSDs Solid State Drives for 2024 PCMAG The Best PCI Express NVMe Solid State Drives SSDs for 2024 PCMAG External linksedit Media related to Workstations at Wikimedia Commons hide vte Computer sizes and classes Micro Static Appliances Arcade cabinet Diskless node Internet appliance Intelligent terminal Interactive kiosk Rich client Simulator Smart speaker Smart TV Thin client Video game console Home console Microconsole Computers By use Gaming Home Industrial Personal Personal super Public Server Home server Workstation By size Allinone Panel Tabletop Surface Desktop Deskside Pizza box Tower Portable Small form factor Mini PC Plug Stick PC Rack Blade server Blade PC Mobile Laptop 2in1 Convertible Cloudbook Mobile workstation Notebook Subnotebook Netbook Smartbook Tablet Detachable Phablet Handheld Electronic organizer Ereader Handheld game console Handheld PC Mobile data terminal Mobile phone Camera Feature Smartphone Foldable Palmtop PC Personal digital assistant Pocket Portable data terminal Portable media player Siftable Ultramobile PC Calculator Graphing Programmable Scientific Wearable Activity tracker Smart band Digital wristwatch Calculator watch Smartwatch Sportwatch Smartglasses Smart ring Midrange Mini Supermini Large Grid Mainframe Minisuper Super Others Embedded system Information appliance Microcontroller Nano Rugged Rugged smartphone Singleboard Computeronmodule Smartdust Wireless sensor network Category Categories American inventionsComputer workstationsClasses of computersBusiness computing This page was last edited on 4 November 2024 at 2144 UTC Text is available under the Creative Commons AttributionShareAlike 40 License additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a nonprofit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view

URL: https://en.wikipedia.org/wiki/CLion
Text: Products Products  IDEs Programming languages Team tools Others Open source projects Open source projects  JetBrains Mono See also References External links JetBrains 25 languages Article Talk Read Edit View history Tools Appearance hide Text Small Standard Large Width Standard Wide Color beta Automatic Light Dark From Wikipedia the free encyclopedia Redirected from CLion This article needs additional citations for verification Please help improve this article by adding citations to reliable sources Unsourced material may be challenged and removed Find sources JetBrains news newspapers books scholar JSTOR June 2022 Learn how and when to remove this message JetBrains sro Company type Private limited company Industry Software Founded 14 August 2000 24 years ago Headquarters Prague Czech Republic Key people Sergey Dmitriev Max Shafirov Kirill Skrygan CEO1 Revenue 10431527000 Czech koruna 2021 Operating income 4834809000 Czech koruna 2021 Net income 3970609000 Czech koruna 2021 Total assets 10145044000 Czech koruna 2021 Number of employees 19002 Website jetbrainscom JetBrains sro formerly IntelliJ Software sro is a Czech3 software development private limited company which makes tools for software developers and project managers45 The company has its headquarters in Prague and has offices in China Europe and the United States6 The company offers integrated development environments IDEs for a variety of programming languages The company created the Kotlin programming language which can run in a Java virtual machine JVM in 2011 InfoWorld magazine awarded the firm Technology of the Year Award in 2011 and 201578 edit JetBrains logo used from 2005 to 2016 JetBrains logo used from 2016 to 2024 JetBrains initially called IntelliJ Software910 was founded in 2000 in Prague by three Russian software developers11 Sergey Dmitriev Valentin Kipyatkov and Eugene Belyaev12 The companys first product was IntelliJ Renamer a tool for code refactoring in Java5 In 2012 CEO Sergey Dmitriev was replaced by Oleg Stepanov and Maxim Shafirov1314 In 2021 The New York Times stated that unknown parties might have embedded malware in JetBrains TeamCity CICD software that led to the SolarWinds hack and other widespread security compromises15 In a press release JetBrains said they had not been contacted by any government or security agency and had not taken part or been involved in this attack in any way16 The CEO of one of the affected companies SolarWinds asked about the possibility that software tools made by JetBrains which speeds the development and testing of code was the pathway Mr Ramakrishna said there was still no evidence17 In response to the 2022 Russian invasion of Ukraine the company suspended sales and RD activities in Russia indefinitely as well as sales in Belarus1819 JetBrains Russian legal entity was liquidated on 21 February 202320 Effective 1 February 2024 Kirill Skrygan replaced Max Shafirov as CEO21 Productsedit IDEsedit The following is a nonexhaustive list of integrated development environments IDEs distributed by JetBrains Name Description Android Studio Made with cooperation of Google for the Android programming tools AppCode Supports programming in C C ObjectiveC and Swift Unlike most JetBrains products that are crossplatform AppCode is only available for macOS JetBrains announced that AppCode is being sunsetted but received technical support until 31 December 202322 Aqua A test automation IDE that supports unit tests UI tests and API tests CLion CLion pronounced sea lion is a C and C IDE for Linux macOS and Windows integrated with the CMake build system2324 The initial version supports GNU Compiler Collection GCC and Clang compilers and GDB debugger LLDB and Google Test25 DataGrip A database administration tool for SQL databases Other data stores are also accessible via plugin functionality DataSpell A data science tool for Jupyter Notebooks and Python26 Fleet Multipurpose IDE with support for collaboration and remote workflows27 GoLand For Go development2829 IntelliJ IDEA For Java virtual machinebased languages such as Java Groovy Kotlin and Scala An opensource version is available under the name IntelliJ IDEA Community Edition and a proprietary version as IntelliJ IDEA Ultimate Edition PhpStorm For PHP30 PyCharm For Python An opensource version is available as PyCharm Community Edition and a proprietary version as PyCharm Professional Edition31 For students JetBrain has also developed PyCharm Education32 Rider For NET primarily C and F development33 and game development with Unity C and Unreal Engine C34 RubyMine For Ruby and Ruby on Rails RustRover For Rust WebStorm For web JavaScript and TypeScript development Many of JetBrainss other IDEs include the feature set of WebStorm via plugins Writerside Technical writing IDE Programming languagesedit Kotlin is an opensource statically typed programming language that runs on the Java Virtual Machine and also compiles to JavaScript or native code via LLVM35 The name comes from the Kotlin Island near St Petersburgcitation needed JetBrains MPS is an opensource language workbench for domainspecific languages DSLs Ktor is a Kotlinbased programming framework for developing connected applications using the same framework on both server JVM and client JavaScript Android and iOS36 Team toolsedit TeamCity is a continuous integration and continuous delivery server developed by JetBrains It is a serverbased web application written in Java The New York Times reported that TeamCity may have been used by Russian hackers of US governmental and private agencies in potentially the biggest breach of United States networks in history15 Upsource is a code review and repository browsing tool supporting Git GitHub Mercurial Perforce andor Subversion repositories from a central location JetBrains released a new developer collaboration tool Space in 20193738 It began sunsetting Upsource in 2022 officially ending support for the product in January 202339 In May 2024 a rebranding from Space to SpaceCode is initiated for the platform to focus on Git hosting and code reviews40 YouTrack is a proprietary commercial webbased bug tracker issue tracking system and project management software developed by JetBrains As of April 2023 YouTrack has a ticketbased helpdesk solution for customer support and service desk processes Qodana is a code quality analysis tool that uses static code analysis to help with users with code reviews building quality gates and the implementation of code quality guidelines41 It was publicly launched in July 2023 and can be used with IDEs in JetBrainss ecosystem has CICD pipeline integration while supporting code analysis in over 60 programming languages42 Othersedit Datalore is a web application for data analysis and visualization which is focused specifically on the machine learning environment in Python43 JetBrains Academy44 is an online platform to learn programming including such programming languages as Python Java and Kotlin The Academy was introduced by JetBrains in 2019 and reached 200000 users by July 20204546 Certifications were added in November 2021 after community feedback prioritized verifiability of the work done on projects47 JetBrains have also developed EduTools plugin for student this plugin is compatible with IntelliJ IDEA Ultimate Community Educational Android Studio CLion GoLand PhpStorm PyCharm Professional Community Educational WebStorm48 Open source projectsedit In 2009 JetBrains opensourced the core functionality of IntelliJ IDEA by offering the free Community Edition4950 It is built on the IntelliJ Platform and includes its sources JetBrains released both under Apache License 2051 In 2010 Android support became a part of the Community Edition52 and two years later Google announced53 its Android Studio the IDE for mobile development on Android platform built on the Community Edition of IntelliJ IDEA and an official alternative to Eclipse Android Developer Tool54 In June 2015 it was announced that the support of Eclipse ADT would be discontinued making Android Studio the official tool for Android App development55 JetBrains Monoedit In January 2020 JetBrains released a geometric monospaced font called JetBrains Mono made the default font for their IDEs under the Apache License 205657 The font is designed for reading source code by being optimized for reading vertically with support for programming ligatures5859 See alsoedit GitHub Copilot Visual Assist Referencesedit JetBrains CEO Transition The JetBrains Blog 30 January 2024 Archived from the original on 2 February 2024 Retrieved 4 February 2024 JetBrains Presents 2022 Annual Highlights Its Community Reaches 128M Developers Across the Globe financeyahoocom Archived from the original on 28 June 2022 Retrieved 30 June 2022 jet Brains Corporate overview PDF Archived PDF from the original on 16 December 2021 Retrieved 11 January 2022 Taft Darryl K 29 June 2012 JetBrains Ships YouTrack 40 Agile Dev Tool eWeek Archived from the original on 24 October 2013 a b Hunger Michael 26 November 2010 JetBrains Developer Tools infoQ Archived from the original on 15 February 2016 Retrieved 5 August 2013 Contact Us JetBrains Retrieved 9 March 2023 staff InfoWorld 26 January 2015 InfoWorlds 2015 Technology of the Year Award winners InfoWorld Archived from the original on 23 June 2017 Retrieved 7 January 2021 InfoWorlds 2011 Technology of the Year Award winners InfoWorld 12 January 2011 Archived from the original on 8 March 2013 Retrieved 3 February 2020 IntelliJ Software sro v likvidaci IČO 26193264 Archived from the original on 7 May 2021 Retrieved 25 November 2019 12th Annual Jolt and Productivity Awards Dr Dobbs Archived from the original on 16 July 2013 Retrieved 2 July 2013 Heiss Janice J November 2012 JAX Innovation Awards winners reflect the vibrancy of the Java community Oracle Technology Network Archived from the original on 9 August 2013 Retrieved 5 August 2013 Java Posse No 001 Interview with Rob Harwood of Jetbrains about IntelliJ IDEA 22 September 2005 Archived from the original on 26 July 2018 Retrieved 10 July 2013 Осипов Антон 26 October 2012 JetBrains назначила генеральных директоров в СанктПетербурге и Мюнхене Vedomosti Archived from the original on 1 September 2014 Retrieved 15 October 2013 Лаврентьева Наталья 24 October 2012 Российский поставщик средств разработки для Oracle и HP назначил гендиректорами двух программистов Cnewsru Archived from the original on 27 October 2012 Retrieved 15 October 2013 a b Perlroth Nicole Sanger David E Barnes Julian E 6 January 2021 Widely Used Software Company May Be Entry Point for Huge US Hacking The New York Times ISSN 03624331 Archived from the original on 31 May 2021 Retrieved 30 June 2022 Shafirov Maxim 6 January 2021 Statement on the story from The New York Times regarding JetBrains and SolarWinds Archived from the original on 7 January 2021 Retrieved 7 January 2021 Sanger David E 24 February 2021 After Russian Cyberattack Looking for Answers and Debating Retaliation The New York Times Archived from the original on 1 July 2022 Retrieved 1 July 2022 JetBrains Statement on Ukraine JetBrains News The JetBrains Blog 11 March 2022 Archived from the original on 4 April 2022 Retrieved 22 March 2022 JetBrains indefinite suspension of sales and RD activities in Russia wwwsobytenet 12 March 2022 Archived from the original on 8 August 2022 Retrieved 22 March 2022 Nogaeva K 1 March 2023 Мозги свернулись в JetBrains закрыли своё последнее юрлицо в Петербурге The brains have curdled JetBrains has closed its last legal entity in St Petersburg in Russian Delovoy Peterburg Retrieved 2 March 2023 JetBrains CEO Transition The JetBrains Blog 30 January 2024 Archived from the original on 2 February 2024 Retrieved 4 February 2024 AppCode 20223 Release and End of Sales and Support 14 December 2022 Bridgwater Adrian 13 September 2014 JetBrains CLion A New Cross Platform CC IDE Dr Dobbs Journal Archived from the original on 18 January 2018 Retrieved 4 April 2015 Avram Abel 9 September 2014 JetBrains CLion a CC IDE and ReSharper for C InfoQ Archived from the original on 10 April 2015 Retrieved 4 April 2015 Supported Languages Features CLion JetBrains Archived from the original on 25 March 2019 Retrieved 11 May 2018 DataSpell The IDE for Professional Data Scientists jetbrainscom Archived from the original on 11 January 2022 Retrieved 9 January 2022 JetBrains Fleet The NextGeneration IDE by JetBrains JetBrains Retrieved 9 October 2022 GoLand The Up and Coming Go IDE by JetBrains JetBrains Archived from the original on 20 November 2017 Retrieved 19 August 2017 Ewbank Kay 19 December 2017 GoLand Adds Go To IntelliJ iprogrammerinfo Archived from the original on 7 October 2019 Retrieved 13 October 2019 Features PhpStorm JetBrains Archived from the original on 19 March 2015 Retrieved 19 November 2016 Features PyCharm JetBrains Archived from the original on 9 May 2017 Retrieved 19 November 2016 JetBrains for Education Keep Evolving Features Rider JetBrains Archived from the original on 30 July 2022 Retrieved 26 July 2022 Game Development Tools by JetBrains Kotlin Native Kotlin Kotlin Help Retrieved 14 August 2022 Welcome Ktor Ktor Help Archived from the original on 12 April 2022 Retrieved 21 March 2022 Cardoza Christina 5 December 2019 JetBrains introduces new developer collaboration tool SD Times Retrieved 10 March 2023 Anderson Tim 20 July 2022 JetBrains Space onpremises released in beta Kubernetes allbut required DEVCLASS DEVCLASS Retrieved 10 March 2023 Sunsetting Upsource The Upsource Blog The JetBrains Blog 31 January 2022 Retrieved 10 March 2023 The Future of Space The Space Blog The JetBrains Blog 27 May 2024 Retrieved 27 May 2024 Krill Paul 20 July 2023 JetBrains ships Qodana static code analysis tool InfoWorld Retrieved 15 November 2023 Daws Ryan 20 July 2023 JetBrains launches code quality platform Qodana Developer Tech News Retrieved 15 November 2023 Carleto Diogo 8 November 2018 JetBrains Introduces Datalore 10 an Intelligent Web Application for Data Analysis InfoQ Archived from the original on 2 May 2019 Retrieved 2 May 2019 JetBrains Academy A handson platform for learning to program JetBrains Archived from the original on 25 July 2020 Retrieved 24 July 2020 JetBrains Academy EAP blogjetbrainscom 27 February 2019 Archived from the original on 27 July 2020 Retrieved 24 July 2020 JetBrains Academy Celebrates the Close of Its Early Access Program with 50 Discount Plan blogjetbrainscom July 2020 Archived from the original on 25 July 2020 Retrieved 24 July 2020 Introducing JetBrains Academy Certificates of Completion The JetBrains for Education Blog The JetBrains Blog 4 November 2021 Archived from the original on 5 February 2022 Retrieved 5 February 2022 JetBrains for Education Keep Evolving Handy Alex 15 October 2009 JetBrains creates opensource IntelliJ IDEA SD Times Archived from the original on 18 October 2009 IntelliJ IDEA open sourced 15 October 2009 Archived from the original on 7 September 2015 Retrieved 8 September 2015 Krill Paul 12 October 2009 JetBrains readies open source version of its Java IDE InfoQ Archived from the original on 14 June 2013 Retrieved 2 July 2013 Russakovskii Artem 9 December 2010 JetBrains Releases IntelliJ IDEA 10 With Full Android Gingerbread Support in the Free Community Edition Android Police Archived from the original on 20 February 2016 Retrieved 3 July 2013 Thomson Iain 15 May 2013 Live Blog Google IO keynote The Register Archived from the original on 3 May 2018 Retrieved 1 September 2017 Wayner Peter 22 May 2013 First look Android Studio eclipses Eclipse InfoQ Archived from the original on 14 June 2013 Retrieved 2 July 2013 Eason Jamal 26 June 2015 An update on Eclipse Android Developer Tools Archived from the original on 19 June 2016 Retrieved 24 September 2015 JetBrains Mono A typeface for developers JetBrains Archived from the original on 21 January 2020 Retrieved 21 January 2020 JetBrainsMono GitHub Archived from the original on 22 January 2020 Retrieved 21 January 2020 Konstantin Bulenkov 15 January 2020 JetBrains Mono A typeface for developers JetBrains Archived from the original on 27 February 2021 Retrieved 11 February 2021 Reeve Robert 24 July 2023 JetBrains Mono Leads the Way as the Ideal Typeface for Developers Web Designer Depot Retrieved 24 August 2023 External linksedit Official website Categories Companies based in PragueCzech brandsCzech companies established in 2010Free software companiesSoftware companies established in 2010Software companies of the Czech Republic This page was last edited on 26 October 2024 at 1516 UTC Text is available under the Creative Commons AttributionShareAlike 40 License additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a nonprofit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view

URL: http://www.ieee.org/documents/piore_rl.pdf
Text: IEEEorg IEEE Xplore Digital Library IEEE Standards IEEE Spectrum More Sites The professional home for the engineering and technology community worldwide all IEEE websites About Membership Communities Conferences Standards Publications Education JOIN IEEE Home Error We are sorry the page you are looking for has been moved or removed One of the following options may help in locating the page you requested Our search crawls across many IEEE websites for the content youre looking for to find related content Check the URL in the address bar of your browser for possible misspellings Visit the Sitemap to locate your page manually If you are an IEEE volunteer your content may now be found on the volunteer extranet Find your volunteer content Select an option Go If you continue to have difficulty finding or accessing the page please use the feedback form to report a problem and someone will get back to you as soon as possible here About IEEE IEEE is the worlds largest technical professional organization dedicated to advancing technology for the benefit of humanity Learn more about IEEE IEEE Mission Vision Locations IEEE has a global presence with seven offices internationally IEEE office locations Membership Join Renew Benefits IEEE Collabratec Report cybersecurity concerns to securityieeeorg Get involved Conferences Local activities Publishing Societies Councils Standards Technical careers Volunteer Connect with IEEE Contact Support IEEE Collabratec Careers at IEEE IEEE Newsroom IEEE Media Kit IEEE Learning Network TOP OF PAGE Home Sitemap Contact Support Accessibility Nondiscrimination Policy IEEE Ethics Reporting IEEE Privacy Policy Terms Disclosures Feedback Copyright 2024 IEEE All rights reserved A public charity IEEE is the worlds largest technical professional organization dedicated to advancing technology for the benefit of humanity

URL: https://en.wikipedia.org/wiki/Michael_Schroeder
Text: Early life and career Awards Gilbert Munger References External links Michael Schroeder 3 languages Article Talk Read Edit View history Tools Appearance hide From Wikipedia the free encyclopedia This biography of a living person needs additional citations for verification Please help by adding reliable sources Contentious material about living persons that is unsourced or poorly sourced must be removed immediately from the article and its talk page especially if potentially libelous Find sources Michael Schroeder news newspapers books scholar JSTOR January 2010 Learn how and when to remove this message Michael David Schroeder Born 1945 age 7879 Richland Washington Alma mater Washington State University MIT Known for NeedhamSchroeder protocol Scientific career Doctoral advisor Jerry Saltzer Michael Schroeder born 1945 is an American computer scientist His areas of research include computer security distributed systems and operating systems and he is perhaps best known as the coinventor of the NeedhamSchroeder protocol In 2001 he cofounded the Microsoft Research Silicon Valley lab and was the assistant managing director until the lab was disbanded in 2014 Early life and careeredit Schroeder was born in 1945 in Richland Washington He did his undergraduate work at Washington State University and went to graduate school at MIT obtaining his PhD in 1972 Starting in 1976 he has been on the MIT EECS department faculty at Xerox PARC and at the DEC Systems Research Center At MIT he was involved with Multics where his contributions included a seminal work on security architecture for shared information systems1 In 1977 Schroeder and Roger Needham designed a new unclassified computer network protocol for distributed authentication server using a Key Distribution Center KDC This idea eventually led to the Kerberos authentication scheme used by MITs Project Athena 2 He has also built Grapevine a distributed system the filesystem of Cedar az a distributed OS Autonet a LAN and Pachyderm a webbased email system He is the coauthor of The Protection of Information in Computer Systems Awardsedit In 2004 he was inducted as a Fellow of the Association for Computing Machinery3 In 2006 ACM SIGSAC presented him with the Outstanding Innovations Award for technical contributions to the field of computer and communication security that have had lasting impact in furthering or understanding the theory andor development of commercial systems In 2007 NISTNSA gave him the National Computer Systems Security Award In 2008 ACM SIGOPS chose the paper Grapevine An Exercise in Distributed Computing which he coauthored for a Hall of Fame Award that recognizes the most influential operating systems papers in the peerreviewed literature at least ten year old Gilbert Mungeredit He is a leading expert on the American landscape painter Gilbert Munger 18371903 for whom he authors a webbased catalogue raisonné and archive of period documents With J Gray Sweeney of Arizona State University he wrote the book Gilbert Munger Quest for Distinction Afton Historical Society Press 2003 Referencesedit Saltzer J H Schroeder M D September 1975 The Protection of Information in Computer Systems Proceedings of the IEEE 63 9 12781308 CiteSeerX 10111269257 doi101109PROC19759939 ISSN 00189219 S2CID 269166 Retrieved November 11 2017 Saltzer J H JanuaryMarch 2021 On the Origin of Kerberos IEEE Annals of the of Computing 43 1 8991 doi101109MAHC20213051508 Michael D Schroeder ACM Awards ACM 2004 Retrieved November 11 2017 For contributions to distributed computing systems security and networking External linksedit Michael D Schroeder web page The Gilbert Munger Web Site show vte Multics show Authority control databases This article about an American scientist in academia is a stub You can help Wikipedia by expanding it Categories American computer scientists2004 fellows of the Association for Computing MachineryPeople associated with computer security1945 birthsLiving peopleScientists at PARC companyMultics peopleWashington State University alumniAmerican academic scientist stubs This page was last edited on 11 November 2024 at 1901 UTC Text is available under the Creative Commons AttributionShareAlike 40 License additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a nonprofit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view

URL: https://sk.wikipedia.org/wiki/Dennis_Ritchie
Text: Preskočiť na obsah Hlavné menu Hľadať Prispieť Vytvoriť účet Prihlásiť sa Osobné nástroje nezobrazovať Obsah skryť Začiatok Referencie Iné projekty Externé odkazy Dennis Ritchie 83 jazykov Stránka Diskusia Čítať Upraviť Upraviť zdroj Zobraziť históriu Nástroje Vzhľad skryť Písmo Malé Štandardné Veľké Šírka Štandardná Široká Farba beta Automaticky Svetlá Tmavá Dennis Ritchie americký programátor Dennis Ritchie v roku 2011 Rod meno Dennis MacAlistair Ritchie Iné mená dmr Narodenie 9 september 1941 Bronxville New York USA Úmrtie 12 október 2011 70 rokov Berkeley Heights New Jersey USA Známy vďaka programovací jazyk C operačný systém Unix Alma mater Harvardova univerzita Odkazy Webstránka belllabscom Commons Dennis Ritchie Informatický portál Biografický portál Dennis MacAlistair Ritchie 9 september 1941 Bronxville New York USA 12 október 2011 Berkeley Heights New Jersey12 bol americký programátor známy hlavne ako tvorca programovacieho jazyka C a spoluautor operačného systému Unix Vyštudoval fyziku a aplikovanú matematiku na Harvardovej univerzite V roku 1967 začal pracovať v počítačovom výskumnom stredisku Bell Labs Do svojej smrti pracoval ako riaditeľ oddelenia výskumu systémového softvéru u spoločnosti Lucent Technologies V 70 rokoch 20 storočia navrhol programovací jazyk C V roku 1978 vytvoril spolu s Brianom Kernighanom základnú referenčnú príručku o tomto jazyku The C Programming Language Dennis Ritchie je písmeno R v slávnej skratke KR ktorou sa štandard jazyka z tejto knihy označuje V roku 1982 získal spolu s Kenom Thompsonom IEEE Emanuel R Piore Award za vznik a vývoj operačného systému s veľkou užitočnosťou prístupnosťou a náučnou hodnotou stelesneného v UNIXe a príslušenstve3 V roku 1983 získal spolu s Kenom Thompsonom Turingovu cenu za rozvoj všeobecnej teórie operačných systémov a zvlášť za implementáciu operačného systému UNIX4 V roku 1990 získal spolu s Kenom Thompsonom IEEE Richard W Hamming Medal za vytvorenie operačného systému UNIX a programovacieho jazyka C5 V roku 1998 získal spolu s Kenom Thompsonom National Medal of Technology and Innovation za vývin operačného systému UNIX a programovacieho jazyka C ktoré spolu viedli nesmiernemu rastu celého odvetvia6 V roku 2005 získal IRI Achievement Award7 V roku 2011 získal spolu s Kenom Thompsonom Japonskú cenu za vývoj operačného systému Unix8 Referencieupraviť upraviť zdroj LOHR Steve Dennis Ritchie Trailblazer in Digital Era Dies at 70 The New York Times New York The New York Times Company 20111014 Dostupné online cit 20220924 ISSN 15538095 Archivované 20220617 z originálu BoingBoing Dennis Ritchie 19412011 Computer scientist Unix cocreator C programming language coinventor IEEE IEEE Emanuel R Piore Award Recipients online Piscataway New Jersey cit 20160516 Dostupné online po anglicky VAN VLECK Tom AM Turing Award Winners Dennis M Ritchie United States 1983 online New York Association for Computing Machinery 2012 cit 20160516 Dostupné online po anglicky IEEE IEEE Richard W Hamming Medal Recipients online Piscataway New Jersey cit 20160516 Dostupné online po anglicky United States Patent and Trademark Office The National Medal of Technology and Innovation 1998 Laureates online Alexandria Virgínia 20160422 rev 20160509 cit 20160516 Dostupné online po anglicky Industrial Research Institute Achievement Award online Arlington Virginia cit 20160516 Dostupné online po anglicky Japan Prize Foundation Laureates of the Japan Prize Dr Dennis M Ritchie online Cit 20160516 Dostupné online Archivované 20160413 z originálu po anglicky Iné projektyupraviť upraviť zdroj Commons ponúka multimediálne súbory na tému Dennis Ritchie Externé odkazyupraviť upraviť zdroj Dennis Ritchie domovská stránka na webe Bell Labs s fulltextami článkov k vývoju jazyka C Unixu a ďalším témam The C Family of Languages rozhovor s Dennisom Ritchiem C Bjarnem Stroustrupom C a Jamesom Goslingom Java v časopise Java Report 2000 Dennis Ritchie Programátor vďaka ktorému mohol vzniknúť macOS a Linux článok na Živésk 2021 skry zdu Držitelia Turingovej ceny Alan Perlis 1966 Maurice Wilkes 1967 Richard Hamming 1968 Marvin Minsky 1969 James Hardy Wilkinson 1970 John McCarthy 1971 Edsger Wybe Dijkstra 1972 Charles Bachman 1973 Donald Ervin Knuth 1974 Allen NewellHerbert Simon 1975 Michael Oser RabinDana Scott 1976 John Backus 1977 Robert Floyd 1978 Kenneth Iverson 1979 C A R Hoare 1980 Edgar Frank Codd 1981 Stephen Cook 1982 Ken ThompsonDennis Ritchie 1983 Niklaus Wirth 1984 Richard Karp 1985 John HopcroftRobert Tarjan 1986 John Cocke 1987 Ivan Sutherland 1988 William Kahan 1989 Fernando Corbató 1990 Robin Milner 1991 Butler Lampson 1992 Juris HartmanisRichard Stearns 1993 Edward FeigenbaumRaj Reddy 1994 Manuel Blum 1995 Amir Pnueli 1996 Douglas Engelbart 1997 James Gray 1998 Frederick Brooks 1999 Andrew Jao 2000 OleJohan DahlKristen Nygaard 2001 Ronald RivestAdi ŠamirLeonard Adleman 2002 Alan Kay 2003 Vinton CerfRobert Kahn 2004 Peter Naur 2005 Frances Allenová 2006 Edmund ClarkeErnest Allen EmersonJoseph Sifakis 2007 Barbara Liskovová 2008 Charles Thacker 2009 Leslie Valiant 2010 Judea Pearl 2011 Silvio MicaliShafi Goldwasser 2012 Leslie Lamport 2013 Michael Stonebraker 2014 Whitfield DiffieMartin Hellman 2015 Tim BernersLee 2016 John Leroy HennessyDavid Andrew Patterson 2017 Yoshua BengioGeoffrey HintonYann LeCun 2018 Edwin CatmullPat Hanrahan 2019 Alfred AhoJeffrey Ullman 2020 Jack Dongarra 2021 Robert Metcalfe 2022 Autoritné údaje BnF 126571234 GND 110760239 Google Scholar w1WB5d0AAAAJ ISNI 0000000080803719 LCCN n77018721 NK ČR xx0041904 NLP 9810670989605606 Scopus 7201711092 VIAF 616522 WorldCat lccnn77018721 Kategórie Narodenia 9 septembraNarodenia v 1941Úmrtia 12 októbraÚmrtia v 2011Programátori USAInformatici USATvorcovia programovacích jazykovProgramovací jazyk CUnixDržitelia Turingovej cenyNositelia Japonskej cenyNositelia Hammingovej medailyNositelia ACM Software System AwardAbsolventi Harvard UniversityÚmrtia na rakovinu prostatyOsobnosti zo štátu New York Dátum a čas poslednej úpravy tejto stránky 9 december 2023 1338 Text je dostupný za podmienok Creative Commons AttributionShareAlike License 40 Unported prípadne za ďalších podmienok Podrobnejšie informácie nájdete na stránke Podmienky použitia Ochrana osobných údajov O Wikipédii Zrieknutie sa zodpovednosti Pravidlá správania Vývojári Štatistiky Vyhlásenie o cookies Mobilné zobrazenie

URL: https://ko.wikipedia.org/wiki/%EB%8D%B0%EB%8B%88%EC%8A%A4_%EB%A6%AC%EC%B9%98
Text: 본문으로 이동 주 메뉴 검색 기부 계정 만들기 로그인 개인 도구 목차 숨기기 처음 위치 생애 업적 저서 각주 외부 링크 데니스 리치 83개 언어 문서 토론 읽기 편집 역사 보기 도구 보이기 숨기기 텍스트 작음 표준 큼 너비 표준 넓게 위키백과 우리 모두의 백과사전 데니스 리치 Dennis Ritchie 데니스 리치2011 출생 1941년 9월 9일 미국 뉴욕 브롱스빌 사망 2011년 10월 12일70세 미국 뉴저지 버클리 헤이츠 국적 미국 출신 학교 하버드 대학교 PhD 1968 주요 업적 알트란 B 프로그래밍 언어 BCPL C 프로그래밍 언어 멀틱스 유닉스 수상 튜링상 1983 미국 국가 기술혁신 메달 1998 IEEE 리처드 W 해밍 메달 1990 컴퓨터 파이오니어 상 1994 컴퓨터 역사박물관 펠로우 19971 헤럴드 펜더 상 2003 일본국제상 2011 분야 컴퓨터 과학 소속 루슨트 테크놀로지 벨 연구소 데니스 매캘리스터 리치영어 Dennis MacAlistair Ritchie 1941년 9월 9일2011년 10월 12일는 미국의 저명한 컴퓨터과학자이자 현대 컴퓨터과학의 선구자이다 C와 유닉스의 개발자로 알려져 있다 생애편집 미국의 뉴욕주 브롱크스빌Bronxville에서 태어났으며 1968년 하버드 대학교에서 응용수학 박사학위를 얻었다 1968년부터 벨 연구소 컴퓨터 연구 센터에서 일했다 2007년 루슨트 테크놀로지의 시스템 소프트웨어 연구부장으로 은퇴했다 홀로 살고 있던 그는 미국 시각으로 2011년 10월 12일 뉴저지주 버클리 헤이츠의 자택에서 사망한 채로 발견되었다 향년 71세 업적편집 켄 톰슨Ken Thompson 등과 함께 최초의 유닉스Unix 시스템을 개발했고 1971년 최초의 Unix Programmers Manual을 썼다 또한 C 언어를 개발한 후 브라이언 커니핸과 함께 C 프로그래밍 언어The C Programming Language를 기술했다 커니핸과 C 프로그래밍 언어책을 썼기에 커니핸이 C 언어 개발에 참여한 것으로 종종 오해받으나 커니핸의 말에 따르면 자신은 C언어 개발에 참여하지 않았다고 한다 ALTRAN B언어 BCPL Multics 등의 개발에도 영향을 끼친 것으로도 알려져 있다 1983년에 켄 톰프슨과 범용 운영체제 이론개발 특히 유닉스 운영체제의 구현에 대한 공로로 튜링상을 수상했다 미국의 경제 전문지 비즈니스 인사이더에서는 현재의 애플 컴퓨터는 거의 모두 데니스 리치의 업적에 기반하고 있다이라며 그의 업적을 평가했다2 현재 애플 매킨토시의 macOS와 아이폰의 iOS는 모두 유닉스 운영체제를 기반으로 만들어져 있다 저서편집 C 프로그래밍 언어 The C Programming Language 1978년 브라이언 커니핸과 공저 Unix Programmers Manual 1971년 각주편집 Dennis Ritchie 1997 Fellow 2015년 1월 3일에 원본 문서에서 보존된 문서 2015년 1월 5일에 확인함 The 21 Most Important Names In Computing Youve Never Heard Business Insider Aug 11 2011 외부 링크편집 위키미디어 공용에 관련된 미디어 분류가 있습니다 데니스 리치 영어 Dennis Ritchie Curlie 펼치기 vte A M 튜링상 수상자 펼치기 전거 통제 분류 1941년 출생2011년 사망미국의 컴퓨터 과학자튜링상 수상자하버드 대학교 동문뉴욕주 출신컴퓨터 선구자프로그래밍 언어 설계자유닉스 관계자서밋 뉴저지주 출신국립 기술혁신 메달 수상자 이 문서는 2024년 5월 5일 일 2331에 마지막으로 편집되었습니다 모든 문서는 크리에이티브 커먼즈 저작자표시동일조건변경허락 40에 따라 사용할 수 있으며 추가적인 조건이 적용될 수 있습니다 자세한 내용은 이용 약관을 참고하십시오 Wikipedia는 미국 및 다른 국가에 등록되어 있는 Wikimedia Foundation Inc 소유의 등록 상표입니다 개인정보처리방침 위키백과 소개 면책 조항 행동 강령 개발자 통계 쿠키 정책 모바일 보기

URL: https://en.wikipedia.org/wiki/Berkeley_Software_Distribution
Text:  Relationship to Research Unix Relationship to System V Technology Technology  Berkeley sockets Binary compatibility Standards BSD descendants See also References Bibliography External links Berkeley Software Distribution 68 languages Article Talk Read Edit View history Tools Appearance hide From Wikipedia the free encyclopedia BSD redirects here For the family of free software licenses see BSD licenses For other uses see BSD disambiguation BSD Developer Computer Systems Research Group Written in C OS family Unix Working state Discontinued Source model Originally sourceavailable later opensource Initial release March 9 1978 46 years ago Final release 44Lite2 June 1995 29 years ago Available in English Platforms PDP11 VAX Intel 80386 Kernel type Monolithic Userland BSD Influenced NetBSD FreeBSD OpenBSD DragonFly BSD NeXTSTEP Darwin Influenced by Unix Default user interface Unix shell License BSD The Berkeley Software Distribution or Berkeley Standard Distribution1 BSD is a discontinued operating system based on Research Unix developed and distributed by the Computer Systems Research Group CSRG at the University of California Berkeley Since the original has become obsolete the term BSD is commonly used for its opensource descendants including FreeBSD OpenBSD NetBSD and DragonFly BSD BSD was initially called Berkeley Unix because it was based on the source code of the original Unix developed at Bell Labs In the 1980s BSD was widely adopted by workstation vendors in the form of proprietary Unix variants such as DEC Ultrix and Sun Microsystems SunOS due to its permissive licensing and familiarity to many technology company founders and engineers These proprietary BSD derivatives were largely superseded in the 1990s by UNIX SVR4 and OSF1 Later releases of BSD provided the basis for several opensource operating systems including FreeBSD OpenBSD NetBSD DragonFly BSD Darwin and TrueOS These in turn have been used by proprietary operating systems including Apples macOS and iOS which derived from them2 and Microsoft Windows since at least 2000 and XP which used at least part of its TCPIP code which was legal3better source needed Code from FreeBSD was also used to create the operating systems for the PlayStation 54 PlayStation 45 PlayStation 36 PlayStation Vita7 and Nintendo Switch89 edit Main article of the Berkeley Software Distribution Simplified evolution of Unix systems Not shown are Junos PlayStation 3 system software and other proprietary forks The earliest distributions of Unix from Bell Labs in the 1970s included the source code to the operating system allowing researchers at universities to modify and extend Unix The operating system arrived at Berkeley in 1974 at the request of computer science professor Bob Fabry who had been on the program committee for the Symposium on Operating Systems Principles where Unix was first presented A PDP1145 was bought to run the system but for budgetary reasons this machine was shared with the mathematics and statistics groups at Berkeley who used RSTS so that Unix only ran on the machine eight hours per day sometimes during the day sometimes during the night A larger PDP1170 was installed at Berkeley the following year using money from the Ingres database project10 BSD began life as a variant of Unix that programmers at the University of California at Berkeley initially led by Bill Joy began developing in the late 1970s It included extra features which were intertwined with code owned by ATT In 1975 Ken Thompson took a sabbatical from Bell Labs and came to Berkeley as a visiting professor He helped to install Version 6 Unix and started working on a Pascal implementation for the system Graduate students Chuck Haley and Bill Joy improved Thompsons Pascal and implemented an improved text editor ex10 Other universities became interested in the software at Berkeley and so in 1977 Joy started compiling the first Berkeley Software Distribution 1BSD which was released on March 9 197811 1BSD was an addon to Version 6 Unix rather than a complete operating system in its own right Some thirty copies were sent out10 The second Berkeley Software Distribution 2BSD released in May 197912 included updated versions of the 1BSD software as well as two new programs by Joy that persist on Unix systems to this day the vi text editor a visual version of ex and the C shell Some 75 copies of 2BSD were sent out by Bill Joy10 The VAX11780 a typical minicomputer used for early BSD timesharing systems A VAX computer was installed at Berkeley in 1978 but the port of Unix to the VAX architecture UNIX32V did not take advantage of the VAXs virtual memory capabilities The kernel of 32V was largely rewritten to include Berkeley graduate student Özalp Babaoğlus virtual memory implementation and a complete operating system including the new kernel ports of the 2BSD utilities to the VAX and the utilities from 32V was released as 3BSD at the end of 1979 3BSD was also alternatively called Virtual VAXUNIX or VMUNIX for Virtual Memory Unix and BSD kernel images were normally called vmunix until 44BSD 43 BSD UNIX from the University of Wisconsin c 1987 System startup and login After 43BSD was released in June 1986 it was determined that BSD would move away from the aging VAX platform The Power 632 platform codenamed Tahoe developed by Computer Consoles Inc seemed promising at the time but was abandoned by its developers shortly thereafter Nonetheless the 43BSDTahoe port June 1988 proved valuable as it led to a separation of machinedependent and machineindependent code in BSD which would improve the systems future portability In addition to portability the CSRG worked on an implementation of the OSI network protocol stack improvements to the kernel virtual memory system and with Van Jacobson of LBL new TCPIP algorithms to accommodate the growth of the Internet13 Until then all versions of BSD used proprietary ATT Unix code and were therefore subject to an ATT software license Source code licenses had become very expensive and several outside parties had expressed interest in a separate release of the networking code which had been developed entirely outside ATT and would not be subject to the licensing requirement This led to Networking Release 1 Net1 which was made available to nonlicensees of ATT code and was freely redistributable under the terms of the BSD license It was released in June 1989 After Net1 BSD developer Keith Bostic proposed that more nonATT sections of the BSD system be released under the same license as Net1 To this end he started a project to reimplement most of the standard Unix utilities without using the ATT code Within eighteen months all of the ATT utilities had been replaced and it was determined that only a few ATT files remained in the kernel These files were removed and the result was the June 1991 release of Networking Release 2 Net2 a nearly complete operating system that was freely distributable Net2 was the basis for two separate ports of BSD to the Intel 80386 architecture the free 386BSD by William and Lynne Jolitz and the proprietary BSD386 later renamed BSDOS by Berkeley Software Design BSDi 386BSD itself was shortlived but became the initial code base of the NetBSD and FreeBSD projects that were started shortly thereafter BSDi soon found itself in legal trouble with ATTs Unix System Laboratories USL subsidiary then the owners of the System V copyright and the Unix trademark The USL v BSDi lawsuit was filed in 1992 and led to an injunction on the distribution of Net2 until the validity of USLs copyright claims on the source could be determined The lawsuit slowed development of the freesoftware descendants of BSD for nearly two years while their legal status was in question and as a result systems based on the Linux kernel which did not have such legal ambiguity gained greater support The lawsuit was settled in January 1994 largely in Berkeleys favor Of the 18000 files in the Berkeley distribution only three had to be removed and 70 modified to show USL copyright notices A further condition of the settlement was that USL would not file further lawsuits against users and distributors of the Berkeleyowned code in the upcoming 44BSD release14 The final release from Berkeley was 1995s 44BSDLite Release 2 after which the CSRG was dissolved and development of BSD at Berkeley ceased Since then several variants based directly or indirectly on 44BSDLite such as FreeBSD NetBSD OpenBSD and DragonFly BSD have been maintained The permissive nature of the BSD license has allowed many other operating systems both opensource and proprietary to incorporate BSD source code For example Microsoft Windows used BSD code in its implementation of TCPIP15 and bundles recompiled versions of BSDs commandline networking tools since Windows 200016 Darwin the basis for Apples macOS and iOS is based on 44BSDLite2 and FreeBSD Various commercial Unix operating systems such as Solaris also incorporate BSD code Relationship to Research Unixedit Starting with the 8th Edition versions of Research Unix at Bell Labs had a close relationship to BSD This began when 41cBSD for the VAX was used as the basis for Research Unix 8th Edition This continued in subsequent versions such as the 9th Edition which incorporated source code and improvements from 43BSD The result was that these later versions of Research Unix were closer to BSD than they were to System V In a Usenet posting from 2000 Dennis Ritchie described this relationship between BSD and Research Unix17better source needed Research Unix 8th Edition started from I think BSD 41c but with enormous amounts scooped out and replaced by our own stuff This continued with 9th and 10th The ordinary user commandset was I guess a bit more BSDflavored than SysVish but it was pretty eclectic Relationship to System Vedit Eric S Raymond summarizes the longstanding relationship between System V and BSD stating The divide was roughly between longhairs and shorthairs programmers and technical people tended to line up with Berkeley and BSD more businessoriented types with ATT and System V18 In 1989 David A Curry wrote about the differences between BSD and System V He characterized System V as being often regarded as the standard Unix However he described BSD as more popular among university and government computer centers due to its advanced features and performance19 Most university and government computer centers that use UNIX use Berkeley UNIX rather than System V There are several reasons for this but perhaps the two most significant are that Berkeley UNIX provides networking capabilities that until recently Release 30 were completely unavailable in System V and that Berkeley UNIX is much more suited to a research environment which requires a faster file system better virtual memory handling and a larger variety of programming languages Technologyedit Berkeley socketsedit 43 BSD from the University of Wisconsin Displaying the man page for Franz Lisp Tape for SunOS 411 a 43BSD derivative Sony NEWS workstation running the BSDbased NEWSOS operating system Berkeleys Unix was the first Unix to include libraries supporting the Internet Protocol stacks Berkeley sockets A Unix implementation of IPs predecessor the ARPAnets NCP with FTP and Telnet clients had been produced at the University of Illinois in 1975 and was available at Berkeley2021 However the memory scarcity on the PDP11 forced a complicated design and performance problems22 By integrating sockets with the Unix operating systems file descriptors it became almost as easy to read and write data across a network as it was to access a disk The ATT laboratory eventually released their own STREAMS library which incorporated much of the same functionality in a software stack with a different architecture but the wide distribution of the existing sockets library reduced the impact of the new API Early versions of BSD were used to form Sun Microsystems SunOS founding the first wave of popular Unix workstations Binary compatibilityedit Some BSD operating systems can run native software of several other operating systems on the same architecture using a binary compatibility layer This is much simpler and faster than emulation for example it allows applications intended for Linux to be run at effectively full speed This makes BSDs not only suitable for server environments but also for workstation ones given the increasing availability of commercial or closedsource software for Linux only This also allows administrators to migrate legacy commercial applications which may have only supported commercial Unix variants to a more modern operating system retaining the functionality of such applications until they can be replaced by a better alternative Standardsedit Current BSD operating system variants support many of the common IEEE ANSI ISO and POSIX standards while retaining most of the traditional BSD behavior Like ATT Unix the BSD kernel is monolithic meaning that device drivers in the kernel run in privileged mode as part of the core of the operating system BSD descendantsedit See also Comparison of BSD operating systems Several operating systems are based on BSD including FreeBSD OpenBSD NetBSD MidnightBSD MirOS BSD GhostBSD Darwin and DragonFly BSD Both NetBSD and FreeBSD were created in 1993 They were initially derived from 386BSD also known as Jolix and merged the 44BSDLite source code in 1994 OpenBSD was forked from NetBSD in 1995 and DragonFly BSD was forked from FreeBSD in 2003 BSD was also used as the basis for several proprietary versions of Unix such as Suns SunOS Sequents DYNIX NeXTs NeXTSTEP DECs Ultrix and OSF1 AXP now Tru64 UNIX NeXTSTEP later became the foundation for Apple Incs macOS See alsoedit BSD Daemon BSD licenses Comparison of BSD operating systems List of BSD operating systems Lumina desktop environment Unix wars Referencesedit Why you should use a BSD style license for your Open Source Project The FreeBSD Project BSD Berkeley Standard Distribution Retrieved August 3 2021 Apple Kernel Programming Guide BSD Overview Retrieved March 27 2021 Actually Windows DOES use some BSD code Archived from the original on March 25 2018 Retrieved March 24 2018 Kernel PlayStation 5 Dev Wiki Open Source Software used in PlayStation 4 Archived from the original on December 12 2017 Retrieved October 3 2019 Open Source Software used in PlayStation 3 Archived from the original on November 11 2017 Retrieved December 8 2022 Open Source Software used in PlayStation Vita Archived from the original on December 12 2017 Retrieved December 8 2022 任天堂製品に関連するオープンソースソフトウェアのソースコード配布ページサポート情報Nintendo wwwnintendocojp Archived from the original on July 26 2020 Retrieved July 26 2020 Cao March 8 2017 Nintendo Switch runs FreeBSD FreeBSDNewscom Archived from the original on July 26 2020 Retrieved July 26 2020 a b c d Salus Peter H 2005 Chapter 7 BSD and the CSRG The Daemon the Gnu and the Penguin Groklaw Archived from the original on June 14 2020 Retrieved September 6 2017 Salus 1994 p 142 Toomey Warren Details of the PUPS archives tuhsorg The Unix Heritage Society Archived from the original on July 9 2006 Retrieved October 6 2010 McKusick MK Karels MJ Sklower Keith Fall Kevin Teitelbaum Marc Bostic Keith 1989 Current Research by The Computer Systems Research Group of Berkeley PDF Proceedings of the European Unix Users Group Spring Conference Eric S Raymond The Art of Unix Programming Origins and of Unix 19691995 Archived from the original on October 5 2014 Retrieved July 18 2014 Barr Adam June 19 2001 Microsoft TCPIP Open Source and Licensing Archived from the original on November 14 2005 Retrieved June 7 2019 BSD Code in Windows everything2com March 20 2001 Archived from the original on August 25 2008 Retrieved January 20 2009 Dennis Ritchie October 26 2000 altfolklorecomputers BSD Dennis Ritchie Archived from the original on July 14 2014 Retrieved July 3 2014 Raymond Eric S The Art of Unix Programming 2003 p 38 Curry David Using C on the UNIX System A Guide to System Programming 1989 pp 23 Chesson G L 1976 The network Unix system ACM SIGOPS Operating Systems Review 9 5 6066 doi1011451067629806522 RFC 681 Quarterman John S Silberschatz Abraham Peterson James L December 1985 42BSD and 43BSD as examples of the Unix system Computing Surveys 17 4 379418 CiteSeerX 10111179743 doi10114560416043 S2CID 5700897 Bibliographyedit Marshall K McKusick Keith Bostic Michael J Karels John S Quartermain The Design and Implementation of the 44BSD Operating System Addison Wesley 1996 ISBN 9780201549799 Marshall K McKusick George V NevilleNeil The Design and Implementation of the FreeBSD Operating System Addison Wesley August 2 2004 ISBN 9780201702453 Samuel J Leffler Marshall K McKusick Michael J Karels John S Quarterman The Design and Implementation of the 43BSD UNIX Operating System Addison Wesley November 1989 ISBN 9780201061963 McKusick Marshall Kirk January 1999 Twenty Years of Berkeley Unix From ATTOwned to Freely Redistributable In DiBona Chris Ockman Sam Stone Mark eds Open Sources Voices from the Revolution first ed OReilly ISBN 9781565925823 Peter H Salus The Daemon the GNU The Penguin Reed Media Services September 1 2008 ISBN 9780979034237 Peter H Salus A Quarter Century of UNIX Addison Wesley June 1 1994 ISBN 9780201547771 Peter H Salus Casting the Net AddisonWesley March 1995 ISBN 9780201876741 External linksedit A timeline of BSD and Research UNIX UNIX of UNIX and BSD using diagrams The Design and Implementation of the 44BSD Operating System The Unix Tree Source code and manuals for old versions of Unix EuroBSDCon an annual event in Europe in September October or November founded Archived June 20 2020 at the Wayback Machine in 2001 BSDCan a conference in Ottawa Ontario Canada held annually in May since 2004 in June since 2015 AsiaBSDCon a conference in Tokyo held annually in March of each year since 2007 mdocsu short manual page URLs for FreeBSD OpenBSD NetBSD and DragonFly BSD a webservice written in nginx BXRSU Super Users BSD Cross Reference a userland and kernel source code search engine based on OpenGrok and nginx show vte Berkeley Software Distribution show vte Unix and Unixlike operating systems and compatibility layers show vte Free and opensource software show vte Operating systems show Authority control databases Categories Berkeley Software Distribution1977 softwareProducts and services discontinued in 1995Free software operating systemsFree software programmed in COperating system familiesScience and technology in the San Francisco Bay AreaUniversity of California Berkeley This page was last edited on 19 October 2024 at 0623 UTC Text is available under the Creative Commons AttributionShareAlike 40 License additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a nonprofit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Code of Conduct Developers Statistics Cookie statement Mobile view

